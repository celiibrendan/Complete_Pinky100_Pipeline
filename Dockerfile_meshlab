FROM hamzamerzic/meshlab
LABEL maintainer="Brendan Papadopoulos"

#------------------------------beginning  OF pipline:ninai:base----------------------#
ARG DEBIAN_FRONTEND=noninteractive

###############################################################################
# Install some optimization libraries (used by many libraries below)
RUN apt-get update && \
    apt-get install -y libopenblas-dev libatlas-base-dev libeigen3-dev && \
    export MKL_NUM_THREADS=1 OPENBLAS_NUM_THREADS=1 OMP_NUM_THREADS=1   

###############################################################################
# Install Python 3
RUN apt-get update && \
    apt-get install -y python3-dev python3-pip python3-numpy python3-scipy \
        python3-matplotlib

###############################################################################
# Install OpenCV 3.4.3 with CUDA support (take a seat, this takes hours)
# With no CUDA support: sudo apt-get install python3-opencv
RUN pip3 install --upgrade pip
RUN apt-get -y install gcc g++


## Get dependencies
RUN apt-get update && \
    apt-get install -y build-essential cmake git pkg-config libgtk-3-dev \
                       libavcodec-dev libavformat-dev libswscale-dev \ 
    # To recompile CUDA we need an slightly older compiler (current is gcc 7)
#                       gcc-6 g++-6 \
    # Optional dependencies
                       libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev \
                       libxvidcore-dev libx264-dev libhdf5-dev ffmpeg 
    # Camera support
#                      libdc1394-22-dev libv4l-devel # camera support

# Install
#RUN git clone https://github.com/opencv/opencv && \
#    cd opencv && \
#    git checkout 3.4.3 && \
#    mkdir build && \
#    cd build && \ 
#    cmake -D CUDA_HOST_COMPILER="/usr/bin/gcc-6" \
#          -D CUDA_NVCC_FLAGS="--expt-relaxed-constexpr" .. && \
#    make install && \
#    cd ../.. && \
#    rm -r opencv

###############################################################################
# Instal FFTW (C library) and pyfftw (its python wrapper)
#RUN apt-get install wget && \
#    wget http://www.fftw.org/fftw-3.3.8.tar.gz && \
#    tar -xvzf fftw-3.3.8.tar.gz && \
#    cd fftw-3.3.8 && \
#    ./configure --enable-threads --with-pic --enable-float --enable-sse --enable-sse2 --enable-avx && \
#    make && \
#    make install && \
#    ./configure --enable-threads --with-pic --enable-sse2 -enable-avx && \
#    make && \
#    make install && \
#    ./configure --enable-threads --with-pic --enable-long-double && \
#    make && \
#    make install && \
#    cd .. && \
#    rm fftw-3.3.8.tar.gz && \
#    rm -r fftw-3.3.8 && \
#    pip3 install pyfftw

###############################################################################
# Install CaImAn
# Install dependencies
#RUN apt-get install -y python3-tk && \
#    pip3 install future cvxpy scikit-learn scikit-image tensorflow keras \
#                 peakutils \
    # Unused but required (imported in code)
#                 ipyparallel Cython h5py tqdm psutil

# Install without OASIS
#RUN pip3 install git+https://github.com/ecobost/CaImAn.git

###############################################################################
# Install spike deconvolution packages
#RUN pip3 install git+https://github.com/cajal/PyFNND # oopsie

#RUN apt-get install autoconf automake libtool && \
#    git clone https://github.com/lucastheis/cmt.git && \
#    cd cmt/code/liblbfgs && \
#    ./autogen.sh && \
#    ./configure --enable-sse2 && \
#    make CFLAGS="-fPIC" && \
#    cd ../..  && \
#    python3 setup.py build && \
#    python3 setup.py install && \
#    python3 setup.py clean --all && \
#    cd .. && \
#   rm -r cmt && \
#    pip3 install git+https://github.com/cajal/c2s.git # stm (spike-triggered mixture model)

###############################################################################
# Install pytorch
#RUN pip3 install http://download.pytorch.org/whl/cu92/torch-0.4.1-cp36-cp36m-linux_x86_64.whl && \
#    pip3 install torchvision

###############################################################################
# Miscelaneous packages
RUN pip3 install git+https://github.com/datajoint/datajoint-python.git
RUN pip3 install git+https://github.com/atlab/scanreader.git
#RUN pip3 install git+https://github.com/cajal/bl3d.git
RUN pip3 install seaborn slacker imreg_dft pandas imageio
RUN apt-get install -y python3-git

# Optional
RUN apt-get install -y nano graphviz
RUN pip3 install nose2 jupyterlab

#------------------------------END OF pipline:ninai:base----------------------#



RUN apt-get -y update && \
    apt-get -y install graphviz libxml2-dev python3-cairosvg parallel

RUN pip3 install datajoint --upgrade
RUN pip3 install python-igraph xlrd

RUN apt-get update && apt-get install -y --no-install-recommends apt-utils

# CGAL Dependencies ########################################################
RUN apt-get -y install libboost-all-dev libgmp-dev libmpfr-dev libcgal-dev libboost-wave-dev libeigen3-dev
############################################################################




WORKDIR /src

RUN pip3 install ipyvolume jupyterlab statsmodels pycircstat nose
RUN pip3 install seaborn --upgrade
RUN pip3 install jgraph


RUN apt-get -y install vim
RUN . /etc/profile
ADD ./CGAL /src/CGAL
RUN pip3 install -e /src/CGAL



#RUN add-apt-repository ppa:boost-latest/ppa
#RUN apt-get update

#-------The part of the script that add meshlabserver to path ----#
#RUN bash
#RUN /bin/bash export PATH=${PATH}:/meshlab/src/distrib
#RUN /bin/bash function meshlabserver() { xvfb-run -a -s "-screen 0 800x600x24" meshlabserver $@; }
#RUN /bin/bash export -f meshlabserver


WORKDIR /notebooks

#add the cgal scripts
EXPOSE 8895

RUN mkdir -p /scripts
ADD ./jupyter/run_jupyter.sh /scripts/
ADD ./jupyter/jupyter_notebook_config.py /root/.jupyter/
ADD ./jupyter/custom.css /root/.jupyter/custom/
RUN chmod -R a+x /scripts


#FROM hamzamerzic/meshlab
#FROM hamzamerzic/meshlab
ENTRYPOINT ["/scripts/run_jupyter.sh"]
